pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                // Using Maven as the build automation tool
               // sh 'mvn clean install'
            echo "Building ..."
            }

post{
                always{
                    mail to: "wangyuheng086@gmail.com",
                    subject: "Build Status Email",
                    body: "Build log attached!
                     Thanks, you have learned how to configure jenkins plugins!
                     "
                }
            }
        }
        
        stage('Unit and Integration Tests') {
            steps {
                // JUnit for unit tests and Maven's Surefire for integration tests
               // sh 'mvn test'
echo "Testing ..."
            }
        }
        
        stage('Code Analysis') {
            steps {
                echo "Testing ..."
                // SonarQube for code analysis
               // sh 'mvn sonar:sonar'
            }
        }

        stage('Security Scan') {
            steps {
                echo "Testing ..."
                // For example, using OWASP Dependency-Check
               // sh 'mvn org.owasp:dependency-check-maven:check'
            }
        }
        
        stage('Deploy to Staging') {
            steps {
                echo "Testing ..."
                // Using AWS CLI to deploy to EC2 (assuming you have pre-configured AWS CLI)
               // sh 'aws ec2 deploy ...' // replace with your actual AWS CLI deploy commands
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo "Testing ..."
                // Selenium for integration tests in a staging environment
               // sh 'selenium-test-command' // replace with your actual Selenium test command
            }
        }
stage('Test 1') {
            steps {
                echo "Testing ..."
                // Selenium for integration tests in a staging environment
               // sh 'selenium-test-command' // replace with your actual Selenium test command
            }
        }

        stage('Deploy to Production') {
            steps {
                echo "Testing ..."
                // Again using AWS CLI for deployment
               // sh 'aws ec2 deploy ...' // replace with your actual AWS CLI deploy commands for production
            }
        }
    }
    
   
}
